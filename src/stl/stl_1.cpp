/*
 * Vector
 * Вектор - это динамичейкий масив на стероидах.
 *
 * --- Операции ---
 * -> at()            - получить элемент по индексу (== arr[i]). Если выходим за границы - получаем exception.
 *                      работает медленнее чем [] поскольку проверяет выход за границу.
 * -> push_back()     - добавление элемента в конец вектора
 * -> front()         - получить первый элемент (== arr[0])
 * -> back()          - получить последний элемент (== arr[SIZE - 1])
 * -> empty()         - проверка есть ли элементы в векторе.
 * -> clear()         - очистить вектор от всех элементов.
 * -> pop_back()      - удалить последний элемент из вектора.
 * -> size()          - количество элеменов в векторе (размер).
 * -> capacity()      - реальная резмерность вектора (когда мы добавляем новый элемент в вектор, так как это динамический масив
 *                      мы создать новый масив с size + 1 и добавить элемент. Но вектор устроем не так. Всегда выделяется место
 *                      с запасом (формула: текущий размер * некий коэффициент).
 * -> reserve()       - задаем capacity по умолчанию.
 * -> shrink_to_fit() - удалить незанятое место из вектора (capacity = size).
 *           C++11 ^^
 * -------------------------------------------------------------------------------
 * -> insert()        - вставка элемента в вектор по итератору. !!! Итератор после вставки обнуляется !!!
 * -> erase()         - удаление элемента из вектора по итератору.
 * ---
 * -> begin()         - возвращает итератор на первый элемент коллекции.
 * -> cbegin()  C++11 - возвращает const итератор на первый элемент коллекции.
 * -> rbegin()        - возвращает reverse итератор на первый элемент коллекции.
 * -> cregin()  C++11 - возвращает const reverse итератор на первый элемент коллекции.
 * ---
 * -> end()           - возвращает итератор на след. элемент который идет после последнего элемента в коллекции.
 * -> cend()    C++11 - возвращает const итератор на след. элемент который идет после последнего элемента в коллекции.
 * -> rend()          - возвращает reverse итератор на след. элемент который идет после последнего элемента в коллекции.
 * -> crend()   C++11 - возвращает const reverse итератор на след. элемент который идет после последнего элемента в коллекции.
 */

#include <iostream>
#include <vector>

int main() {
  std::vector<int> v1;          // обычное обьявление
  std::vector<int> v2(20);      // создать вектор с size=20 + инициализация данных (в зависимости от типа, пример int = 0)
  std::vector<int> v3(22, 777); // создать вектор с size=22 + инициализировать данные числом 777

  return 0;
}
